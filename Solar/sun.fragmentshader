#version 330 core
out vec4 FragColor;

in vec3 TexCoords;

float mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}
vec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}
vec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}

float noise(vec3 p, float scale){
    p *= scale;
    vec3 a = floor(p);
    vec3 d = p - a;
    d = d * d * (3.0 - 2.0 * d);

    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);
    vec4 k1 = perm(b.xyxy);
    vec4 k2 = perm(k1.xyxy + b.zzww);

    vec4 c = k2 + a.zzzz;
    vec4 k3 = perm(c);
    vec4 k4 = perm(c + 1.0);

    vec4 o1 = fract(k3 * (1.0 / 41.0));
    vec4 o2 = fract(k4 * (1.0 / 41.0));

    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);
    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);

    return o4.y * d.y + o4.x * (1.0 - d.y);
}

void main() {
    float smallNoise = noise(TexCoords, 10.0);
    float bigNoise = noise(TexCoords, 3);

    vec3 bigNoise3 = bigNoise * vec3(1.0, 0.5, 0);
    vec3 smallNoise3 = smallNoise * vec3(1.0, 0.0, 0.0);
    vec3 smallInvNoise3 = (1-smallNoise) * vec3(0.75, 0.75, 0.0);

    vec3 finalNoise = (smallNoise3 + bigNoise3 + smallInvNoise3) * 0.33;



    FragColor = vec4(finalNoise * 2, 1.0);
}